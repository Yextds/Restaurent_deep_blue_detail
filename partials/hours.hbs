
{{#with (formatHours this "Monday" "TimeFormatShort" "DateFormatShort") }}
{{#each this.regularHours}}
<div class="{{this.displayDay}} time-row currentDay"
  data-day="{{this.displayDay}}">
  <div class="day">{{this.displayDay}}</div>
  {{#if this.isClosed}}Closed{{/if}}
  {{#if this.is247}}Open 24/7{{/if}}
  {{#each this.openIntervals}}
  <div class="store-time"> {{this.start}}-{{this.end}} </div>
  {{/each}}
</div>
{{/each}}
{{/with}}

<script>
  function convertDays(days) {
    const currentDate = new Date();
    const dayNumber = currentDate.getDay();
    const currentSelectedDay = days[dayNumber];
    const beforeSelected = days.slice(0, dayNumber);
    const afterSelected = days.slice(dayNumber, days.length);
    beforeSelected.forEach((element) => {
      afterSelected.push(element);
    });
    return {
      afterSelected: afterSelected
    };
  }

  var days_string = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  $('.time-row').each(function () {

    var day = $(this).attr('data-day');
    var timeStart = $(this).attr('data-start');
    var timeEnd = $(this).attr('data-end');

    var today = new Date();
    var dayName = days_string[today.getDay()];
    if (day) {
      if (dayName == day) {
        $(this).addClass('currentDay');
        $(this).clone().prependTo("#hours1-div");
        $(this).remove();
      }
    } else {

      if (dayName == day) {
        $(this).addClass('currentDay');
        $(this).clone().prependTo("#hours1-div");
        $(this).remove();
      }

    }

  });

  const convertedDays = convertDays(days_string);
  const days = convertedDays.afterSelected;


  let day_html = '';
  for (let i = 0; i < days.length; i++) {
    let currentDay = '';
    if (i == 0) {
      currentDay = 'currentDay';
    }
    day_html += '<div class="time-row  ' + currentDay + ' " >'
    day_html += $('#hours1-div').find('.' + days[i]).html();
    day_html += '</div>';
  }
  $('#hours1-div').html(day_html);

</script>